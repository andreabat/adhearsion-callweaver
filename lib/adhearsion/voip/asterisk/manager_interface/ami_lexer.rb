# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
require File.join(File.dirname(__FILE__), 'ami_messages.rb')

module Adhearsion
  module VoIP
    module Asterisk
      module Manager
        class AbstractAsteriskManagerInterfaceStreamLexer

          BUFFER_SIZE = 8.kilobytes unless defined? BUFFER_SIZE

          # line 52 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
##

          attr_accessor(:ami_version)
          def initialize
    
            @data = ""
            @current_pointer = 0
            @ragel_stack = []
            
            
# line 24 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rb"
class << self
	attr_accessor :_ami_protocol_parser_actions
	private :_ami_protocol_parser_actions, :_ami_protocol_parser_actions=
end
self._ami_protocol_parser_actions = [
	0, 1, 0, 1, 2, 1, 5, 1, 
	6, 1, 7, 1, 8, 1, 9, 1, 
	10, 1, 17, 1, 18, 1, 19, 1, 
	20, 1, 29, 1, 31, 1, 32, 1, 
	36, 1, 37, 1, 38, 1, 39, 1, 
	40, 1, 41, 1, 42, 1, 43, 1, 
	44, 1, 49, 1, 50, 1, 51, 1, 
	52, 1, 53, 1, 56, 1, 57, 1, 
	58, 1, 59, 1, 60, 2, 1, 24, 
	2, 3, 27, 2, 4, 48, 2, 7, 
	17, 2, 8, 9, 2, 9, 10, 2, 
	11, 9, 2, 12, 10, 2, 15, 13, 
	2, 19, 20, 2, 21, 45, 2, 22, 
	46, 2, 23, 47, 2, 29, 30, 2, 
	32, 54, 3, 11, 8, 9, 3, 12, 
	9, 10, 3, 32, 14, 35, 3, 32, 
	28, 55, 4, 11, 12, 9, 10, 4, 
	32, 16, 25, 34, 4, 32, 16, 26, 
	33, 5, 32, 16, 25, 34, 14, 5, 
	32, 16, 26, 33, 25
]

class << self
	attr_accessor :_ami_protocol_parser_key_offsets
	private :_ami_protocol_parser_key_offsets, :_ami_protocol_parser_key_offsets=
end
self._ami_protocol_parser_key_offsets = [
	0, 0, 1, 2, 3, 4, 5, 6, 
	7, 8, 9, 10, 11, 12, 13, 14, 
	15, 16, 17, 18, 19, 20, 22, 25, 
	27, 30, 31, 34, 37, 40, 43, 45, 
	48, 50, 53, 55, 58, 60, 62, 64, 
	66, 68, 70, 72, 75, 77, 80, 81, 
	82, 84, 85, 87, 88, 90, 91, 92, 
	93, 94, 95, 96, 97, 98, 99, 100, 
	101, 102, 103, 104, 105, 106, 107, 108, 
	109, 110, 112, 115, 117, 120, 121, 124, 
	127, 129, 131, 133, 134, 136, 137, 139, 
	141, 143, 145, 147, 149, 151, 153, 154, 
	163, 172, 174, 176, 178, 180, 181, 182, 
	198, 213, 228, 243, 260, 261, 263, 280, 
	281, 296, 311, 326, 343, 344, 346, 363, 
	378, 395, 412, 429, 446, 463, 480, 495, 
	512, 513, 515, 532, 549, 565, 581, 598, 
	615, 632, 648, 664, 681, 698, 714, 730, 
	747, 762, 779, 796, 813, 830, 847, 864, 
	879, 896, 897, 899, 916, 933, 949, 965, 
	982, 999, 1001, 1003, 1005, 1007, 1009, 1011, 
	1012, 1013, 1014, 1015, 1017, 1019, 1021, 1022, 
	1023, 1025, 1027, 1029, 1031, 1033, 1035, 1036, 
	1037, 1052, 1053, 1068, 1083, 1098, 1115, 1116, 
	1118, 1133, 1148, 1165, 1181, 1197, 1214, 1215, 
	1217, 1219, 1221, 1223, 1225, 1227, 1229, 1231, 
	1233, 1235, 1237, 1239, 1241, 1243, 1245, 1247, 
	1248, 1249, 1251, 1267, 1283, 1299, 1316, 1317, 
	1319, 1335, 1351, 1367, 1384, 1385, 1387, 1404, 
	1421, 1438, 1455, 1472, 1489, 1506, 1523, 1540, 
	1557, 1574, 1591, 1608, 1625, 1641, 1656, 1671, 
	1688, 1689, 1691, 1706, 1721, 1738, 1754, 1770, 
	1787, 1803, 1820, 1836, 1852, 1869, 1886, 1902, 
	1918, 1935, 1951, 1952, 1953, 1956, 1958, 1960, 
	1962, 1964, 1966, 1968, 1970, 1972, 1974, 1976, 
	1977, 1978, 1984, 1985, 1986, 1988, 1990, 1990, 
	2005, 2007, 2023, 2039
]

class << self
	attr_accessor :_ami_protocol_parser_trans_keys
	private :_ami_protocol_parser_trans_keys, :_ami_protocol_parser_trans_keys=
end
self._ami_protocol_parser_trans_keys = [
	116, 101, 114, 105, 115, 107, 32, 67, 
	97, 108, 108, 32, 77, 97, 110, 97, 
	103, 101, 114, 47, 48, 57, 46, 48, 
	57, 48, 57, 13, 48, 57, 10, 13, 
	48, 57, 46, 48, 57, 10, 13, 58, 
	10, 13, 58, 13, 58, 10, 13, 58, 
	13, 58, 10, 13, 58, 13, 58, 10, 
	13, 58, 10, 13, 10, 13, 10, 13, 
	10, 13, 10, 13, 10, 13, 10, 13, 
	10, 13, 58, 13, 58, 10, 13, 58, 
	13, 13, 10, 13, 13, 10, 13, 13, 
	10, 13, 116, 101, 114, 105, 115, 107, 
	32, 67, 97, 108, 108, 32, 77, 97, 
	110, 97, 103, 101, 114, 47, 48, 57, 
	46, 48, 57, 48, 57, 13, 48, 57, 
	10, 13, 48, 57, 46, 48, 57, 69, 
	101, 78, 110, 84, 116, 58, 13, 32, 
	13, 10, 13, 13, 32, 83, 115, 80, 
	112, 79, 111, 78, 110, 83, 115, 69, 
	101, 58, 32, 69, 70, 80, 83, 101, 
	102, 112, 115, 32, 69, 70, 80, 83, 
	101, 102, 112, 115, 82, 114, 82, 114, 
	79, 111, 82, 114, 13, 10, 77, 109, 
	32, 47, 48, 57, 58, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 58, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 58, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 58, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 32, 58, 33, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 10, 13, 13, 
	77, 109, 32, 47, 48, 57, 58, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	10, 58, 32, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 58, 
	32, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 32, 
	58, 33, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	10, 13, 13, 77, 109, 32, 47, 48, 
	57, 58, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 58, 69, 101, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 58, 83, 115, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 58, 83, 115, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 58, 65, 97, 
	32, 47, 48, 57, 59, 64, 66, 90, 
	91, 96, 98, 122, 123, 126, 58, 71, 
	103, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 58, 
	69, 101, 32, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	32, 58, 33, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 10, 13, 13, 77, 109, 32, 47, 
	48, 57, 58, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 32, 58, 33, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 32, 58, 
	33, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 32, 
	58, 33, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	32, 58, 33, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 58, 32, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 58, 32, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 32, 58, 33, 47, 48, 57, 59, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	126, 13, 32, 58, 33, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 32, 58, 33, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 58, 69, 101, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 58, 83, 115, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 58, 83, 115, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 58, 65, 97, 
	32, 47, 48, 57, 59, 64, 66, 90, 
	91, 96, 98, 122, 123, 126, 58, 71, 
	103, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 58, 
	69, 101, 32, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	32, 58, 33, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 10, 13, 13, 77, 109, 32, 47, 
	48, 57, 58, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 32, 58, 33, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 32, 58, 
	33, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 32, 
	58, 33, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 79, 
	111, 76, 108, 76, 108, 79, 111, 87, 
	119, 83, 115, 13, 10, 13, 10, 79, 
	111, 78, 110, 71, 103, 13, 10, 85, 
	117, 67, 99, 67, 99, 69, 101, 83, 
	115, 83, 115, 13, 10, 13, 32, 47, 
	48, 57, 58, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 10, 58, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 58, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 32, 58, 33, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 10, 13, 13, 32, 
	47, 48, 57, 58, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 58, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 32, 58, 33, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 32, 58, 
	33, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 10, 
	13, 13, 45, 13, 45, 13, 69, 13, 
	78, 13, 68, 13, 32, 13, 67, 13, 
	79, 13, 77, 13, 77, 13, 65, 13, 
	78, 13, 68, 13, 45, 13, 45, 13, 
	10, 10, 13, 13, 58, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 58, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 58, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 32, 58, 33, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 10, 13, 13, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	32, 58, 33, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 10, 13, 13, 45, 58, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 58, 69, 32, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 78, 
	32, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 58, 
	68, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	32, 58, 33, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 58, 67, 32, 47, 48, 57, 59, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	126, 13, 58, 79, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 58, 77, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 58, 77, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 58, 65, 32, 
	47, 48, 57, 59, 64, 66, 90, 91, 
	96, 97, 122, 123, 126, 13, 58, 78, 
	32, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 58, 
	68, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	45, 58, 32, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 45, 58, 32, 47, 48, 57, 59, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	126, 13, 58, 32, 47, 48, 57, 59, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	126, 58, 32, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	32, 58, 33, 47, 48, 57, 59, 64, 
	65, 90, 91, 96, 97, 122, 123, 126, 
	13, 10, 13, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 58, 32, 47, 48, 57, 59, 
	64, 65, 90, 91, 96, 97, 122, 123, 
	126, 13, 32, 58, 33, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 58, 32, 47, 48, 57, 
	59, 64, 65, 90, 91, 96, 97, 122, 
	123, 126, 13, 32, 58, 33, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 58, 32, 47, 48, 
	57, 59, 64, 65, 90, 91, 96, 97, 
	122, 123, 126, 13, 32, 58, 33, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 58, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 58, 32, 47, 
	48, 57, 59, 64, 65, 90, 91, 96, 
	97, 122, 123, 126, 13, 32, 58, 33, 
	47, 48, 57, 59, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 32, 58, 
	33, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 58, 
	32, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 58, 
	32, 47, 48, 57, 59, 64, 65, 90, 
	91, 96, 97, 122, 123, 126, 13, 32, 
	58, 33, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	58, 32, 47, 48, 57, 59, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 65, 
	115, 10, 13, 58, 13, 58, 13, 58, 
	13, 58, 10, 13, 10, 13, 10, 13, 
	10, 13, 10, 13, 13, 58, 13, 58, 
	13, 13, 13, 65, 69, 82, 101, 114, 
	10, 115, 86, 118, 69, 101, 13, 32, 
	47, 48, 57, 58, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 13, 45, 13, 
	45, 32, 47, 48, 57, 58, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 13, 
	45, 32, 47, 48, 57, 58, 64, 65, 
	90, 91, 96, 97, 122, 123, 126, 32, 
	47, 48, 57, 58, 64, 65, 90, 91, 
	96, 97, 122, 123, 126, 0
]

class << self
	attr_accessor :_ami_protocol_parser_single_lengths
	private :_ami_protocol_parser_single_lengths, :_ami_protocol_parser_single_lengths=
end
self._ami_protocol_parser_single_lengths = [
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 0, 1, 0, 
	1, 1, 1, 1, 3, 3, 2, 3, 
	2, 3, 2, 3, 2, 2, 2, 2, 
	2, 2, 2, 3, 2, 3, 1, 1, 
	2, 1, 2, 1, 2, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 0, 1, 0, 1, 1, 1, 1, 
	2, 2, 2, 1, 2, 1, 2, 2, 
	2, 2, 2, 2, 2, 2, 1, 9, 
	9, 2, 2, 2, 2, 1, 1, 2, 
	1, 1, 1, 3, 1, 2, 3, 1, 
	1, 1, 1, 3, 1, 2, 3, 1, 
	3, 3, 3, 3, 3, 3, 1, 3, 
	1, 2, 3, 3, 2, 2, 3, 3, 
	3, 2, 2, 3, 3, 2, 2, 3, 
	1, 3, 3, 3, 3, 3, 3, 1, 
	3, 1, 2, 3, 3, 2, 2, 3, 
	3, 2, 2, 2, 2, 2, 2, 1, 
	1, 1, 1, 2, 2, 2, 1, 1, 
	2, 2, 2, 2, 2, 2, 1, 1, 
	1, 1, 1, 1, 1, 3, 1, 2, 
	1, 1, 3, 2, 2, 3, 1, 2, 
	2, 2, 2, 2, 2, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 1, 
	1, 2, 2, 2, 2, 3, 1, 2, 
	2, 2, 2, 3, 1, 2, 3, 3, 
	3, 3, 3, 3, 3, 3, 3, 3, 
	3, 3, 3, 3, 2, 1, 1, 3, 
	1, 2, 1, 1, 3, 2, 2, 3, 
	2, 3, 2, 2, 3, 3, 2, 2, 
	3, 2, 1, 1, 3, 2, 2, 2, 
	2, 2, 2, 2, 2, 2, 2, 1, 
	1, 6, 1, 1, 2, 2, 0, 1, 
	2, 2, 2, 0
]

class << self
	attr_accessor :_ami_protocol_parser_range_lengths
	private :_ami_protocol_parser_range_lengths, :_ami_protocol_parser_range_lengths=
end
self._ami_protocol_parser_range_lengths = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 1, 1, 1, 
	1, 0, 1, 1, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 1, 1, 1, 1, 0, 1, 1, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 7, 
	7, 7, 7, 7, 0, 0, 7, 0, 
	7, 7, 7, 7, 0, 0, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	0, 0, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 0, 0, 7, 7, 7, 7, 7, 
	7, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	7, 0, 7, 7, 7, 7, 0, 0, 
	7, 7, 7, 7, 7, 7, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 7, 7, 7, 7, 0, 0, 
	7, 7, 7, 7, 0, 0, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	0, 0, 7, 7, 7, 7, 7, 7, 
	7, 7, 7, 7, 7, 7, 7, 7, 
	7, 7, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 7, 
	0, 7, 7, 7
]

class << self
	attr_accessor :_ami_protocol_parser_index_offsets
	private :_ami_protocol_parser_index_offsets, :_ami_protocol_parser_index_offsets=
end
self._ami_protocol_parser_index_offsets = [
	0, 0, 2, 4, 6, 8, 10, 12, 
	14, 16, 18, 20, 22, 24, 26, 28, 
	30, 32, 34, 36, 38, 40, 42, 45, 
	47, 50, 52, 55, 58, 62, 66, 69, 
	73, 76, 80, 83, 87, 90, 93, 96, 
	99, 102, 105, 108, 112, 115, 119, 121, 
	123, 126, 128, 131, 133, 136, 138, 140, 
	142, 144, 146, 148, 150, 152, 154, 156, 
	158, 160, 162, 164, 166, 168, 170, 172, 
	174, 176, 178, 181, 183, 186, 188, 191, 
	194, 197, 200, 203, 205, 208, 210, 213, 
	216, 219, 222, 225, 228, 231, 234, 236, 
	246, 256, 259, 262, 265, 268, 270, 272, 
	282, 291, 300, 309, 320, 322, 325, 336, 
	338, 347, 356, 365, 376, 378, 381, 392, 
	401, 412, 423, 434, 445, 456, 467, 476, 
	487, 489, 492, 503, 514, 524, 534, 545, 
	556, 567, 577, 587, 598, 609, 619, 629, 
	640, 649, 660, 671, 682, 693, 704, 715, 
	724, 735, 737, 740, 751, 762, 772, 782, 
	793, 804, 807, 810, 813, 816, 819, 822, 
	824, 826, 828, 830, 833, 836, 839, 841, 
	843, 846, 849, 852, 855, 858, 861, 863, 
	865, 874, 876, 885, 894, 903, 914, 916, 
	919, 928, 937, 948, 958, 968, 979, 981, 
	984, 987, 990, 993, 996, 999, 1002, 1005, 
	1008, 1011, 1014, 1017, 1020, 1023, 1026, 1029, 
	1031, 1033, 1036, 1046, 1056, 1066, 1077, 1079, 
	1082, 1092, 1102, 1112, 1123, 1125, 1128, 1139, 
	1150, 1161, 1172, 1183, 1194, 1205, 1216, 1227, 
	1238, 1249, 1260, 1271, 1282, 1292, 1301, 1310, 
	1321, 1323, 1326, 1335, 1344, 1355, 1365, 1375, 
	1386, 1396, 1407, 1417, 1427, 1438, 1449, 1459, 
	1469, 1480, 1490, 1492, 1494, 1498, 1501, 1504, 
	1507, 1510, 1513, 1516, 1519, 1522, 1525, 1528, 
	1530, 1532, 1539, 1541, 1543, 1546, 1549, 1550, 
	1559, 1562, 1572, 1582
]

class << self
	attr_accessor :_ami_protocol_parser_indicies
	private :_ami_protocol_parser_indicies, :_ami_protocol_parser_indicies=
end
self._ami_protocol_parser_indicies = [
	1, 0, 2, 0, 3, 0, 4, 0, 
	5, 0, 6, 0, 7, 0, 8, 0, 
	9, 0, 10, 0, 11, 0, 12, 0, 
	13, 0, 14, 0, 15, 0, 16, 0, 
	17, 0, 18, 0, 19, 0, 20, 0, 
	21, 0, 22, 23, 0, 24, 0, 25, 
	26, 0, 27, 0, 25, 26, 0, 22, 
	23, 0, 29, 30, 31, 28, 29, 30, 
	31, 28, 34, 31, 33, 35, 34, 31, 
	33, 37, 38, 36, 39, 37, 38, 36, 
	40, 38, 36, 41, 37, 38, 36, 43, 
	44, 42, 43, 44, 42, 45, 44, 42, 
	46, 44, 42, 48, 49, 47, 48, 49, 
	47, 50, 49, 47, 51, 30, 31, 28, 
	34, 31, 33, 52, 30, 31, 28, 54, 
	53, 54, 53, 55, 54, 53, 57, 56, 
	58, 57, 56, 59, 56, 60, 57, 56, 
	62, 61, 63, 61, 64, 61, 65, 61, 
	66, 61, 67, 61, 68, 61, 69, 61, 
	70, 61, 71, 61, 72, 61, 73, 61, 
	74, 61, 75, 61, 76, 61, 77, 61, 
	78, 61, 79, 61, 80, 61, 81, 61, 
	82, 61, 83, 84, 61, 85, 61, 86, 
	87, 61, 88, 61, 86, 87, 61, 83, 
	84, 61, 89, 89, 61, 90, 90, 61, 
	91, 91, 61, 92, 61, 94, 95, 93, 
	97, 96, 98, 97, 96, 94, 95, 93, 
	99, 99, 61, 100, 100, 61, 101, 101, 
	61, 102, 102, 61, 103, 103, 61, 104, 
	104, 61, 105, 61, 106, 107, 108, 109, 
	110, 107, 108, 109, 110, 61, 106, 107, 
	108, 109, 110, 107, 108, 109, 110, 61, 
	111, 111, 61, 112, 112, 61, 113, 113, 
	61, 114, 114, 61, 115, 61, 116, 61, 
	119, 119, 117, 118, 117, 118, 117, 118, 
	117, 61, 122, 120, 121, 120, 121, 120, 
	121, 120, 61, 122, 120, 121, 120, 121, 
	120, 121, 120, 61, 122, 120, 121, 120, 
	121, 120, 121, 120, 61, 124, 125, 128, 
	126, 127, 126, 127, 126, 127, 126, 123, 
	130, 129, 131, 130, 129, 132, 135, 135, 
	133, 134, 133, 134, 133, 134, 133, 61, 
	136, 61, 139, 137, 138, 137, 138, 137, 
	138, 137, 61, 139, 137, 138, 137, 138, 
	137, 138, 137, 61, 139, 137, 138, 137, 
	138, 137, 138, 137, 61, 141, 142, 145, 
	143, 144, 143, 144, 143, 144, 143, 140, 
	147, 146, 148, 147, 146, 132, 135, 135, 
	133, 134, 133, 134, 133, 134, 133, 61, 
	139, 137, 138, 137, 138, 137, 138, 137, 
	61, 139, 149, 149, 137, 138, 137, 138, 
	137, 138, 137, 61, 139, 150, 150, 137, 
	138, 137, 138, 137, 138, 137, 61, 139, 
	151, 151, 137, 138, 137, 138, 137, 138, 
	137, 61, 139, 152, 152, 137, 138, 137, 
	138, 137, 138, 137, 61, 139, 153, 153, 
	137, 138, 137, 138, 137, 138, 137, 61, 
	139, 154, 154, 137, 138, 137, 138, 137, 
	138, 137, 61, 155, 137, 138, 137, 138, 
	137, 138, 137, 61, 157, 158, 161, 159, 
	160, 159, 160, 159, 160, 159, 156, 163, 
	162, 164, 163, 162, 132, 135, 135, 133, 
	134, 133, 134, 133, 134, 133, 61, 157, 
	158, 161, 159, 160, 159, 160, 159, 160, 
	159, 156, 163, 167, 165, 166, 165, 166, 
	165, 166, 165, 162, 163, 167, 165, 166, 
	165, 166, 165, 166, 165, 162, 169, 170, 
	173, 171, 172, 171, 172, 171, 172, 171, 
	168, 169, 170, 173, 171, 172, 171, 172, 
	171, 172, 171, 168, 141, 142, 145, 143, 
	144, 143, 144, 143, 144, 143, 140, 147, 
	176, 174, 175, 174, 175, 174, 175, 174, 
	146, 147, 176, 174, 175, 174, 175, 174, 
	175, 174, 146, 141, 142, 145, 143, 144, 
	143, 144, 143, 144, 143, 140, 124, 125, 
	128, 126, 127, 126, 127, 126, 127, 126, 
	123, 130, 179, 177, 178, 177, 178, 177, 
	178, 177, 129, 130, 179, 177, 178, 177, 
	178, 177, 178, 177, 129, 124, 125, 128, 
	126, 127, 126, 127, 126, 127, 126, 123, 
	122, 120, 121, 120, 121, 120, 121, 120, 
	61, 122, 180, 180, 120, 121, 120, 121, 
	120, 121, 120, 61, 122, 181, 181, 120, 
	121, 120, 121, 120, 121, 120, 61, 122, 
	182, 182, 120, 121, 120, 121, 120, 121, 
	120, 61, 122, 183, 183, 120, 121, 120, 
	121, 120, 121, 120, 61, 122, 184, 184, 
	120, 121, 120, 121, 120, 121, 120, 61, 
	122, 185, 185, 120, 121, 120, 121, 120, 
	121, 120, 61, 186, 120, 121, 120, 121, 
	120, 121, 120, 61, 188, 189, 192, 190, 
	191, 190, 191, 190, 191, 190, 187, 194, 
	193, 195, 194, 193, 132, 135, 135, 133, 
	134, 133, 134, 133, 134, 133, 61, 188, 
	189, 192, 190, 191, 190, 191, 190, 191, 
	190, 187, 194, 198, 196, 197, 196, 197, 
	196, 197, 196, 193, 194, 198, 196, 197, 
	196, 197, 196, 197, 196, 193, 200, 201, 
	204, 202, 203, 202, 203, 202, 203, 202, 
	199, 200, 201, 204, 202, 203, 202, 203, 
	202, 203, 202, 199, 205, 205, 61, 206, 
	206, 61, 207, 207, 61, 208, 208, 61, 
	209, 209, 61, 210, 210, 61, 211, 61, 
	212, 61, 213, 61, 214, 61, 215, 215, 
	61, 216, 216, 61, 217, 217, 61, 218, 
	61, 219, 61, 220, 220, 61, 221, 221, 
	61, 222, 222, 61, 223, 223, 61, 224, 
	224, 61, 225, 225, 61, 226, 61, 227, 
	61, 228, 230, 231, 230, 231, 230, 231, 
	230, 229, 232, 229, 235, 233, 234, 233, 
	234, 233, 234, 233, 229, 235, 233, 234, 
	233, 234, 233, 234, 233, 229, 235, 233, 
	234, 233, 234, 233, 234, 233, 229, 237, 
	238, 241, 239, 240, 239, 240, 239, 240, 
	239, 236, 243, 242, 244, 243, 242, 228, 
	230, 231, 230, 231, 230, 231, 230, 229, 
	235, 233, 234, 233, 234, 233, 234, 233, 
	229, 237, 238, 241, 239, 240, 239, 240, 
	239, 240, 239, 236, 243, 247, 245, 246, 
	245, 246, 245, 246, 245, 242, 243, 247, 
	245, 246, 245, 246, 245, 246, 245, 242, 
	237, 238, 241, 239, 240, 239, 240, 239, 
	240, 239, 236, 250, 249, 251, 250, 249, 
	250, 252, 249, 250, 253, 249, 250, 254, 
	249, 250, 255, 249, 250, 256, 249, 250, 
	257, 249, 250, 258, 249, 250, 259, 249, 
	250, 260, 249, 250, 261, 249, 250, 262, 
	249, 250, 263, 249, 250, 264, 249, 250, 
	265, 249, 250, 266, 249, 267, 248, 268, 
	248, 269, 250, 249, 250, 272, 270, 271, 
	270, 271, 270, 271, 270, 249, 250, 272, 
	270, 271, 270, 271, 270, 271, 270, 249, 
	250, 272, 270, 271, 270, 271, 270, 271, 
	270, 249, 274, 275, 278, 276, 277, 276, 
	277, 276, 277, 276, 273, 280, 279, 281, 
	280, 279, 250, 285, 283, 284, 283, 284, 
	283, 284, 283, 249, 250, 285, 283, 284, 
	283, 284, 283, 284, 283, 249, 250, 285, 
	283, 284, 283, 284, 283, 284, 283, 249, 
	287, 288, 291, 289, 290, 289, 290, 289, 
	290, 289, 286, 293, 292, 294, 293, 292, 
	250, 295, 285, 283, 284, 283, 284, 283, 
	284, 283, 249, 250, 285, 296, 283, 284, 
	283, 284, 283, 284, 283, 249, 250, 285, 
	297, 283, 284, 283, 284, 283, 284, 283, 
	249, 250, 285, 298, 283, 284, 283, 284, 
	283, 284, 283, 249, 250, 299, 285, 283, 
	284, 283, 284, 283, 284, 283, 249, 250, 
	285, 300, 283, 284, 283, 284, 283, 284, 
	283, 249, 250, 285, 301, 283, 284, 283, 
	284, 283, 284, 283, 249, 250, 285, 302, 
	283, 284, 283, 284, 283, 284, 283, 249, 
	250, 285, 303, 283, 284, 283, 284, 283, 
	284, 283, 249, 250, 285, 304, 283, 284, 
	283, 284, 283, 284, 283, 249, 250, 285, 
	305, 283, 284, 283, 284, 283, 284, 283, 
	249, 250, 285, 306, 283, 284, 283, 284, 
	283, 284, 283, 249, 250, 307, 285, 283, 
	284, 283, 284, 283, 284, 283, 249, 250, 
	308, 285, 283, 284, 283, 284, 283, 284, 
	283, 249, 267, 311, 309, 310, 309, 310, 
	309, 310, 309, 282, 311, 309, 310, 309, 
	310, 309, 310, 309, 282, 311, 309, 310, 
	309, 310, 309, 310, 309, 282, 313, 314, 
	317, 315, 316, 315, 316, 315, 316, 315, 
	312, 319, 318, 320, 319, 318, 311, 309, 
	310, 309, 310, 309, 310, 309, 282, 311, 
	309, 310, 309, 310, 309, 310, 309, 282, 
	313, 314, 317, 315, 316, 315, 316, 315, 
	316, 315, 312, 319, 323, 321, 322, 321, 
	322, 321, 322, 321, 318, 319, 323, 321, 
	322, 321, 322, 321, 322, 321, 318, 313, 
	314, 317, 315, 316, 315, 316, 315, 316, 
	315, 312, 250, 285, 283, 284, 283, 284, 
	283, 284, 283, 249, 287, 288, 291, 289, 
	290, 289, 290, 289, 290, 289, 286, 293, 
	326, 324, 325, 324, 325, 324, 325, 324, 
	292, 293, 326, 324, 325, 324, 325, 324, 
	325, 324, 292, 287, 288, 291, 289, 290, 
	289, 290, 289, 290, 289, 286, 274, 275, 
	278, 276, 277, 276, 277, 276, 277, 276, 
	273, 280, 329, 327, 328, 327, 328, 327, 
	328, 327, 279, 280, 329, 327, 328, 327, 
	328, 327, 328, 327, 279, 274, 275, 278, 
	276, 277, 276, 277, 276, 277, 276, 273, 
	250, 272, 270, 271, 270, 271, 270, 271, 
	270, 249, 331, 330, 333, 332, 335, 336, 
	337, 334, 34, 31, 33, 40, 38, 36, 
	40, 38, 36, 43, 44, 42, 43, 341, 
	42, 43, 341, 42, 48, 49, 47, 43, 
	341, 42, 40, 38, 36, 40, 38, 36, 
	59, 56, 59, 56, 343, 344, 345, 346, 
	345, 346, 342, 348, 347, 349, 347, 350, 
	350, 347, 351, 351, 347, 229, 353, 354, 
	355, 354, 355, 354, 355, 354, 352, 250, 
	252, 249, 250, 359, 358, 360, 358, 360, 
	358, 360, 358, 249, 250, 359, 358, 360, 
	358, 360, 358, 360, 358, 249, 361, 362, 
	361, 362, 361, 362, 361, 357, 0
]

class << self
	attr_accessor :_ami_protocol_parser_trans_targs
	private :_ami_protocol_parser_trans_targs, :_ami_protocol_parser_trans_targs=
end
self._ami_protocol_parser_trans_targs = [
	266, 2, 3, 4, 5, 6, 7, 8, 
	9, 10, 11, 12, 13, 14, 15, 16, 
	17, 18, 19, 20, 21, 22, 23, 27, 
	24, 25, 26, 266, 29, 269, 43, 40, 
	268, 30, 31, 270, 32, 33, 36, 34, 
	35, 271, 37, 272, 38, 273, 274, 41, 
	275, 42, 276, 277, 278, 47, 48, 279, 
	49, 50, 51, 52, 280, 281, 54, 55, 
	56, 57, 58, 59, 60, 61, 62, 63, 
	64, 65, 66, 67, 68, 69, 70, 71, 
	72, 73, 74, 75, 79, 76, 77, 78, 
	281, 81, 82, 83, 84, 85, 86, 87, 
	85, 86, 281, 89, 90, 91, 92, 93, 
	94, 95, 96, 97, 161, 171, 176, 98, 
	99, 100, 101, 102, 103, 104, 144, 145, 
	105, 106, 107, 108, 109, 140, 141, 142, 
	143, 108, 109, 110, 111, 112, 119, 120, 
	281, 113, 114, 115, 116, 117, 136, 137, 
	138, 139, 116, 117, 118, 121, 122, 123, 
	124, 125, 126, 127, 128, 129, 131, 132, 
	133, 134, 128, 129, 130, 132, 133, 134, 
	128, 129, 135, 132, 133, 134, 137, 138, 
	139, 141, 142, 143, 146, 147, 148, 149, 
	150, 151, 152, 153, 154, 156, 157, 158, 
	159, 153, 154, 155, 157, 158, 159, 153, 
	154, 160, 157, 158, 159, 162, 163, 164, 
	165, 166, 167, 168, 169, 170, 281, 172, 
	173, 174, 175, 281, 177, 178, 179, 180, 
	181, 182, 183, 281, 185, 0, 186, 193, 
	286, 187, 188, 189, 190, 191, 194, 195, 
	196, 197, 190, 191, 192, 195, 196, 197, 
	287, 198, 199, 200, 201, 202, 203, 204, 
	205, 206, 207, 208, 209, 210, 211, 212, 
	213, 214, 215, 216, 287, 288, 219, 220, 
	221, 222, 223, 261, 262, 263, 264, 222, 
	223, 289, 287, 225, 226, 227, 228, 229, 
	257, 258, 259, 260, 228, 229, 290, 231, 
	232, 233, 234, 235, 236, 237, 238, 239, 
	240, 241, 242, 243, 244, 245, 246, 247, 
	248, 249, 252, 253, 254, 255, 248, 249, 
	291, 253, 254, 255, 258, 259, 260, 262, 
	263, 264, 266, 267, 266, 1, 28, 44, 
	45, 46, 268, 268, 268, 39, 281, 282, 
	283, 284, 285, 281, 281, 53, 80, 88, 
	198, 217, 218, 265, 287, 287, 224, 230, 
	256, 250, 251
]

class << self
	attr_accessor :_ami_protocol_parser_trans_actions
	private :_ami_protocol_parser_trans_actions, :_ami_protocol_parser_trans_actions=
end
self._ami_protocol_parser_trans_actions = [
	45, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 5, 0, 0, 
	0, 7, 0, 39, 0, 135, 0, 0, 
	37, 0, 0, 122, 0, 0, 0, 0, 
	0, 140, 0, 135, 0, 135, 151, 0, 
	135, 0, 145, 145, 135, 0, 0, 122, 
	0, 0, 0, 0, 140, 57, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 5, 0, 0, 0, 7, 0, 
	47, 0, 0, 0, 0, 21, 96, 21, 
	0, 23, 105, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 3, 0, 9, 9, 9, 
	0, 0, 11, 13, 84, 13, 13, 13, 
	81, 0, 15, 0, 0, 9, 9, 9, 
	75, 0, 0, 11, 13, 84, 13, 13, 
	13, 81, 0, 15, 0, 0, 0, 0, 
	0, 0, 0, 11, 87, 130, 87, 87, 
	87, 114, 0, 90, 0, 0, 0, 11, 
	13, 118, 13, 13, 13, 81, 0, 0, 
	11, 0, 0, 11, 0, 0, 0, 0, 
	0, 0, 11, 87, 130, 87, 87, 87, 
	114, 0, 90, 0, 0, 0, 11, 13, 
	118, 13, 13, 13, 81, 0, 0, 0, 
	0, 0, 0, 0, 69, 0, 49, 0, 
	0, 0, 1, 102, 0, 0, 0, 0, 
	0, 0, 1, 99, 0, 0, 9, 9, 
	72, 0, 0, 11, 13, 84, 13, 13, 
	13, 81, 0, 15, 0, 0, 0, 11, 
	67, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 19, 0, 59, 126, 0, 0, 
	11, 13, 84, 13, 13, 13, 81, 0, 
	15, 111, 65, 0, 0, 11, 13, 84, 
	13, 13, 13, 81, 0, 15, 111, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 19, 0, 0, 11, 
	13, 84, 13, 13, 13, 81, 0, 15, 
	29, 0, 0, 11, 0, 0, 11, 0, 
	0, 11, 41, 29, 43, 0, 93, 93, 
	93, 93, 33, 35, 31, 0, 53, 0, 
	29, 29, 29, 55, 51, 0, 0, 0, 
	17, 17, 78, 78, 63, 61, 9, 9, 
	9, 9, 9
]

class << self
	attr_accessor :_ami_protocol_parser_to_state_actions
	private :_ami_protocol_parser_to_state_actions, :_ami_protocol_parser_to_state_actions=
end
self._ami_protocol_parser_to_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	25, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 25, 0, 108, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 25, 0, 0, 0, 0, 0, 108, 
	0, 0, 0, 0
]

class << self
	attr_accessor :_ami_protocol_parser_from_state_actions
	private :_ami_protocol_parser_from_state_actions, :_ami_protocol_parser_from_state_actions=
end
self._ami_protocol_parser_from_state_actions = [
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 27, 0, 27, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 27, 0, 0, 0, 0, 0, 27, 
	0, 0, 0, 0
]

class << self
	attr_accessor :_ami_protocol_parser_eof_trans
	private :_ami_protocol_parser_eof_trans, :_ami_protocol_parser_eof_trans=
end
self._ami_protocol_parser_eof_trans = [
	0, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 1, 1, 1, 1, 
	1, 1, 1, 1, 0, 0, 33, 33, 
	33, 33, 33, 33, 33, 33, 33, 33, 
	33, 33, 33, 0, 0, 0, 0, 0, 
	0, 33, 33, 33, 33, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	62, 62, 62, 62, 62, 62, 62, 62, 
	0, 0, 0, 0, 0, 0, 0, 0, 
	0, 0, 0, 0, 0, 0, 249, 249, 
	249, 249, 249, 249, 249, 249, 249, 249, 
	249, 249, 249, 249, 249, 249, 249, 249, 
	249, 0, 0, 0, 0, 0, 0, 0, 
	283, 283, 283, 283, 283, 283, 283, 283, 
	283, 283, 283, 283, 283, 283, 283, 283, 
	283, 283, 283, 283, 283, 283, 283, 283, 
	283, 283, 283, 283, 283, 283, 283, 283, 
	283, 283, 283, 283, 283, 0, 0, 0, 
	0, 0, 0, 333, 0, 339, 340, 341, 
	339, 339, 341, 339, 339, 339, 339, 340, 
	341, 0, 348, 348, 348, 348, 0, 0, 
	357, 358, 358, 358
]

class << self
	attr_accessor :ami_protocol_parser_start
end
self.ami_protocol_parser_start = 266;
class << self
	attr_accessor :ami_protocol_parser_first_final
end
self.ami_protocol_parser_first_final = 266;
class << self
	attr_accessor :ami_protocol_parser_error
end
self.ami_protocol_parser_error = 0;

class << self
	attr_accessor :ami_protocol_parser_en_irregularity
end
self.ami_protocol_parser_en_irregularity = 268;
class << self
	attr_accessor :ami_protocol_parser_en_main
end
self.ami_protocol_parser_en_main = 266;
class << self
	attr_accessor :ami_protocol_parser_en_protocol
end
self.ami_protocol_parser_en_protocol = 281;
class << self
	attr_accessor :ami_protocol_parser_en_success
end
self.ami_protocol_parser_en_success = 184;
class << self
	attr_accessor :ami_protocol_parser_en_response_follows
end
self.ami_protocol_parser_en_response_follows = 287;


# line 971 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rb"
begin
	     @current_pointer ||= 0
	    @data_ending_pointer ||=   @data.length
	    @current_state = ami_protocol_parser_start
	   @ragel_stack_top = 0
	    @token_start = nil
	    @token_end = nil
	   @ragel_act = 0
end
# line 79 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
##
            
          end
  
          def <<(new_data)
            extend_buffer_with new_data
            resume!
          end
        
          def resume!
            
# line 993 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rb"
begin
	_klen, _trans, _keys, _acts, _nacts = nil
	_goto_level = 0
	_resume = 10
	_eof_trans = 15
	_again = 20
	_test_eof = 30
	_out = 40
	while true
	_trigger_goto = false
	if _goto_level <= 0
	if      @current_pointer ==     @data_ending_pointer
		_goto_level = _test_eof
		next
	end
	if     @current_state == 0
		_goto_level = _out
		next
	end
	end
	if _goto_level <= _resume
	_acts = _ami_protocol_parser_from_state_actions[    @current_state]
	_nacts = _ami_protocol_parser_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _ami_protocol_parser_actions[_acts - 1]
			when 31 then
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_start =      @current_pointer
		end
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
# line 1028 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rb"
		end # from state action switch
	end
	if _trigger_goto
		next
	end
	_keys = _ami_protocol_parser_key_offsets[    @current_state]
	_trans = _ami_protocol_parser_index_offsets[    @current_state]
	_klen = _ami_protocol_parser_single_lengths[    @current_state]
	_break_match = false
	
	begin
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + _klen - 1

	     loop do
	        break if _upper < _lower
	        _mid = _lower + ( (_upper - _lower) >> 1 )

	        if   @data[     @current_pointer] < _ami_protocol_parser_trans_keys[_mid]
	           _upper = _mid - 1
	        elsif   @data[     @current_pointer] > _ami_protocol_parser_trans_keys[_mid]
	           _lower = _mid + 1
	        else
	           _trans += (_mid - _keys)
	           _break_match = true
	           break
	        end
	     end # loop
	     break if _break_match
	     _keys += _klen
	     _trans += _klen
	  end
	  _klen = _ami_protocol_parser_range_lengths[    @current_state]
	  if _klen > 0
	     _lower = _keys
	     _upper = _keys + (_klen << 1) - 2
	     loop do
	        break if _upper < _lower
	        _mid = _lower + (((_upper-_lower) >> 1) & ~1)
	        if   @data[     @current_pointer] < _ami_protocol_parser_trans_keys[_mid]
	          _upper = _mid - 2
	        elsif   @data[     @current_pointer] > _ami_protocol_parser_trans_keys[_mid+1]
	          _lower = _mid + 2
	        else
	          _trans += ((_mid - _keys) >> 1)
	          _break_match = true
	          break
	        end
	     end # loop
	     break if _break_match
	     _trans += _klen
	  end
	end while false
	_trans = _ami_protocol_parser_indicies[_trans]
	end
	if _goto_level <= _eof_trans
	    @current_state = _ami_protocol_parser_trans_targs[_trans]
	if _ami_protocol_parser_trans_actions[_trans] != 0
		_acts = _ami_protocol_parser_trans_actions[_trans]
		_nacts = _ami_protocol_parser_actions[_acts]
		_acts += 1
		while _nacts > 0
			_nacts -= 1
			_acts += 1
			case _ami_protocol_parser_actions[_acts - 1]
when 0 then
# line 17 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 init_success 		end
# line 17 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 1 then
# line 19 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 init_response_follows 		end
# line 19 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 2 then
# line 21 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 init_error 		end
# line 21 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 3 then
# line 23 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 message_received @current_message 		end
# line 23 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 4 then
# line 24 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
   error_received @current_message 		end
# line 24 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 5 then
# line 26 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 version_starts 		end
# line 26 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 6 then
# line 27 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 version_stops  		end
# line 27 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 7 then
# line 29 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 key_starts 		end
# line 29 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 8 then
# line 30 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 key_stops  		end
# line 30 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 9 then
# line 32 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 value_starts 		end
# line 32 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 10 then
# line 33 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 value_stops  		end
# line 33 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 11 then
# line 35 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 error_reason_starts 		end
# line 35 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 12 then
# line 36 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 error_reason_stops  		end
# line 36 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 13 then
# line 38 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 syntax_error_starts 		end
# line 38 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 14 then
# line 39 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 syntax_error_stops  		end
# line 39 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 15 then
# line 41 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 immediate_response_starts 		end
# line 41 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 16 then
# line 42 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 immediate_response_stops  		end
# line 42 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 17 then
# line 44 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 follows_text_starts 		end
# line 44 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 18 then
# line 45 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 follows_text_stops  		end
# line 45 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 19 then
# line 47 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 event_name_starts 		end
# line 47 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 20 then
# line 48 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 event_name_stops  		end
# line 48 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 21 then
# line 34 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 	begin
		    @current_state = 184
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
# line 34 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 22 then
# line 35 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 	begin
		    @current_state = 184
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
# line 35 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 23 then
# line 36 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 	begin
		    @current_state = 184
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
# line 36 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 24 then
# line 38 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 	begin
		    @current_state = 287
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
# line 38 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 25 then
# line 44 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
	begin
		   @ragel_stack_top -= 1
		    @current_state =  @ragel_stack[   @ragel_stack_top]
		_trigger_goto = true
		_goto_level = _again
		break
	end
		end
# line 44 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 26 then
# line 47 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
	begin
		   @ragel_stack_top -= 1
		    @current_state =  @ragel_stack[   @ragel_stack_top]
		_trigger_goto = true
		_goto_level = _again
		break
	end
		end
# line 47 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 27 then
# line 84 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
	begin
		    @current_state = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end
		end
# line 84 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 28 then
# line 90 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 message_received; 	begin
		    @current_state = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end
 		end
# line 90 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 32 then
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 33 then
# line 52 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
   @ragel_act = 1;		end
# line 52 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 34 then
# line 53 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
   @ragel_act = 2;		end
# line 53 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 35 then
# line 54 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
   @ragel_act = 3;		end
# line 54 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 36 then
# line 52 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer
     @current_pointer =      @current_pointer - 1;		end
# line 52 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 37 then
# line 53 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer
     @current_pointer =      @current_pointer - 1;		end
# line 53 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 38 then
# line 54 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer
     @current_pointer =      @current_pointer - 1; begin  	begin
		   @ragel_stack_top -= 1
		    @current_state =  @ragel_stack[   @ragel_stack_top]
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
# line 54 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 39 then
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
	case    @ragel_act
	when 0 then
	begin	begin
		    @current_state = 0
		_trigger_goto = true
		_goto_level = _again
		break
	end
end
	when 3 then
	begin begin      @current_pointer = ((    @token_end))-1; end
 	begin
		   @ragel_stack_top -= 1
		    @current_state =  @ragel_stack[   @ragel_stack_top]
		_trigger_goto = true
		_goto_level = _again
		break
	end
 end
	else
	begin begin      @current_pointer = ((    @token_end))-1; end
end
end 
			end
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 40 then
# line 61 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
 begin  	begin
		    @current_state = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
# line 61 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 41 then
# line 62 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
 begin 
    # If this scanner's look-ahead capability didn't match the prompt, let's ignore the need for a prompt
         @current_pointer =      @current_pointer - 1;
    	begin
		    @current_state = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end

   end
		end
# line 62 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 42 then
# line 62 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer
     @current_pointer =      @current_pointer - 1; begin 
    # If this scanner's look-ahead capability didn't match the prompt, let's ignore the need for a prompt
         @current_pointer =      @current_pointer - 1;
    	begin
		    @current_state = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end

   end
		end
# line 62 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 43 then
# line 62 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 begin      @current_pointer = ((    @token_end))-1; end
 begin 
    # If this scanner's look-ahead capability didn't match the prompt, let's ignore the need for a prompt
         @current_pointer =      @current_pointer - 1;
    	begin
		    @current_state = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end

   end
		end
# line 62 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 44 then
# line 70 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 70 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 45 then
# line 71 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 71 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 46 then
# line 72 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 72 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 47 then
# line 73 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 73 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 48 then
# line 74 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 74 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 49 then
# line 75 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 75 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 50 then
# line 76 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
 begin  	begin
		    @current_state = 281
		_trigger_goto = true
		_goto_level = _again
		break
	end
  end
		end
# line 76 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 51 then
# line 77 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
 begin 
    # If NONE of the above patterns match, we consider this a syntax error. The irregularity machine can recover gracefully.
         @current_pointer =      @current_pointer - 1;
    	begin
		 @ragel_stack[   @ragel_stack_top] =     @current_state
		   @ragel_stack_top+= 1
		    @current_state = 268
		_trigger_goto = true
		_goto_level = _again
		break
	end

   end
		end
# line 77 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 52 then
# line 77 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer
     @current_pointer =      @current_pointer - 1; begin 
    # If NONE of the above patterns match, we consider this a syntax error. The irregularity machine can recover gracefully.
         @current_pointer =      @current_pointer - 1;
    	begin
		 @ragel_stack[   @ragel_stack_top] =     @current_state
		   @ragel_stack_top+= 1
		    @current_state = 268
		_trigger_goto = true
		_goto_level = _again
		break
	end

   end
		end
# line 77 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 53 then
# line 77 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 begin      @current_pointer = ((    @token_end))-1; end
 begin 
    # If NONE of the above patterns match, we consider this a syntax error. The irregularity machine can recover gracefully.
         @current_pointer =      @current_pointer - 1;
    	begin
		 @ragel_stack[   @ragel_stack_top] =     @current_state
		   @ragel_stack_top+= 1
		    @current_state = 268
		_trigger_goto = true
		_goto_level = _again
		break
	end

   end
		end
# line 77 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 54 then
# line 88 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
   @ragel_act = 14;		end
# line 88 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 55 then
# line 90 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
   @ragel_act = 16;		end
# line 90 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 56 then
# line 89 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer+1
		end
# line 89 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 57 then
# line 88 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer
     @current_pointer =      @current_pointer - 1;		end
# line 88 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 58 then
# line 90 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_end =      @current_pointer
     @current_pointer =      @current_pointer - 1;		end
# line 90 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 59 then
# line 88 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
 begin      @current_pointer = ((    @token_end))-1; end
		end
# line 88 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 60 then
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
	case    @ragel_act
	when 0 then
	begin	begin
		    @current_state = 0
		_trigger_goto = true
		_goto_level = _again
		break
	end
end
	else
	begin begin      @current_pointer = ((    @token_end))-1; end
end
end 
			end
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
# line 1587 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rb"
			end # action switch
		end
	end
	if _trigger_goto
		next
	end
	end
	if _goto_level <= _again
	_acts = _ami_protocol_parser_to_state_actions[    @current_state]
	_nacts = _ami_protocol_parser_actions[_acts]
	_acts += 1
	while _nacts > 0
		_nacts -= 1
		_acts += 1
		case _ami_protocol_parser_actions[_acts - 1]
when 29 then
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
    @token_start = nil;		end
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
when 30 then
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
		begin
   @ragel_act = 0
		end
# line 1 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
# line 1614 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rb"
		end # to state action switch
	end
	if _trigger_goto
		next
	end
	if     @current_state == 0
		_goto_level = _out
		next
	end
	     @current_pointer += 1
	if      @current_pointer !=     @data_ending_pointer
		_goto_level = _resume
		next
	end
	end
	if _goto_level <= _test_eof
	if      @current_pointer ==    @eof
	if _ami_protocol_parser_eof_trans[    @current_state] > 0
		_trans = _ami_protocol_parser_eof_trans[    @current_state] - 1;
		_goto_level = _eof_trans
		next;
	end
end
	end
	if _goto_level <= _out
		break
	end
	end
	end
# line 89 "lib/adhearsion/voip/asterisk/manager_interface/ami_lexer.rl.rb"
##
          end
        
          def extend_buffer_with(new_data)
            if new_data.size + @data.size > BUFFER_SIZE
              @data.slice! 0...new_data.size
              # TODO: What if the current_pointer wasn't at the end of the data for some reason?
              @current_pointer = @data.size
            end
            @data << new_data
            @data_ending_pointer = @data.size
          end
        
          protected
                
          ##
          # Called after a response or event has been successfully parsed.
          #
          # @param [ManagerInterfaceResponse, ManagerInterfaceEvent] message The message just received
          #
          def message_received(message)
            raise NotImplementedError, "Must be implemented in subclass!"
          end

          ##
          # Called when there is an Error: stanza on the socket. Could be caused by executing an unrecognized command, trying
          # to originate into an invalid priority, etc. Note: many errors' responses are actually tightly coupled to a
          # ManagerInterfaceEvent which comes directly after it. Often the message will say something like "Channel status
          # will follow".
          #
          # @param [String] reason The reason given in the Message: header for the error stanza.
          #
          def error_received(reason)
            raise NotImplementedError, "Must be implemented in subclass!"
          end

          ##
          # Called when there's a syntax error on the socket. This doesn't happen as often as it should because, in many cases,
          # it's impossible to distinguish between a syntax error and an immediate packet.
          #
          # @param [String] ignored_chunk The offending text which caused the syntax error.
          def syntax_error_encountered(ignored_chunk)
            raise NotImplementedError, "Must be implemented in subclass!"
          end
        
          def init_success
            @current_message = ManagerInterfaceResponse.new
          end
        
          def init_response_follows
            @current_message = ManagerInterfaceResponse.new
          end
          
          def init_error
            @current_message = ManagerInterfaceError.new()
          end
          
          def version_starts
            @start_of_version = @current_pointer
          end
  
          def version_stops
            self.ami_version = @data[@start_of_version...@current_pointer].to_f
            @start_of_version = nil
          end
  
          def event_name_starts
            @event_name_start = @current_pointer
          end
  
          def event_name_stops
            event_name = @data[@event_name_start...@current_pointer]
            @event_name_start = nil
            @current_message = ManagerInterfaceEvent.new(event_name)
          end
  
          def key_starts
            @current_key_position = @current_pointer
          end
  
          def key_stops
            @current_key = @data[@current_key_position...@current_pointer]
          end
  
          def value_starts
            @current_value_position = @current_pointer
          end
  
          def value_stops
            @current_value = @data[@current_value_position...@current_pointer]
            @last_seen_value_end = @current_pointer + 2 # 2 for \r\n
            add_pair_to_current_message
          end
          
          def error_reason_starts
            @error_reason_start = @current_pointer
          end
          
          def error_reason_stops
            @current_message.message = @data[@error_reason_start...@current_pointer]
          end
          
          def follows_text_starts
            @follows_text_start = @current_pointer
          end
  
          def follows_text_stops
            text = @data[@last_seen_value_end..(@current_pointer - "\r\n--END COMMAND--".size)]
            @current_message.text_body = text
            @follows_text_start = nil
          end
  
          def add_pair_to_current_message
            @current_message[@current_key] = @current_value
            reset_key_and_value_positions
          end
  
          def reset_key_and_value_positions
            @current_key, @current_value, @current_key_position, @current_value_position = nil
          end
  
          def syntax_error_starts
            @current_syntax_error_start = @current_pointer # Adding 1 since the pointer is still set to the last successful match
          end
  
          def syntax_error_stops
            # Subtracting 3 from @current_pointer below for "\r\n" which separates a stanza
            offending_data = @data[@current_syntax_error_start...@current_pointer - 1]
            syntax_error_encountered offending_data
            @current_syntax_error_start = nil
          end
  
          def immediate_response_starts
            @immediate_response_start = @current_pointer
          end
  
          def immediate_response_stops
            message = @data[@immediate_response_start...(@current_pointer -1)]
            message_received ManagerInterfaceResponse.from_immediate_response(message)
          end
  
          ##
          # This method is used primarily in debugging.
          #
          def view_buffer(message=nil)
    
            message ||= "Viewing the buffer"
    
            buffer = @data.clone
            buffer.insert(@current_pointer, "\033[0;31m\033[1;31m^\033[0m")
    
            buffer.gsub!("\r", "\\\\r")
            buffer.gsub!("\n", "\\n\n")
    
            puts <<-INSPECTION
VVVVVVVVVVVVVVVVVVVVVVVVVVVVV
####  #{message}
#############################
#{buffer}
#############################
^^^^^^^^^^^^^^^^^^^^^^^^^^^^^
            INSPECTION
    
          end
        end
        class DelegatingAsteriskManagerInterfaceLexer < AbstractAsteriskManagerInterfaceStreamLexer
          
          def initialize(delegate, method_delegation_map=nil)
            super()
            @delegate = delegate
            
            @message_received_method = method_delegation_map && method_delegation_map.has_key?(:message_received) ?
                method_delegation_map[:message_received] : :message_received
            
            @error_received_method = method_delegation_map && method_delegation_map.has_key?(:error_received) ?
                method_delegation_map[:error_received] : :error_received
            
            @syntax_error_method = method_delegation_map && method_delegation_map.has_key?(:syntax_error_encountered) ?
                method_delegation_map[:syntax_error_encountered] : :syntax_error_encountered
          end
          
          def message_received(message)
            @delegate.send(@message_received_method, message)
          end
          
          def error_received(message)
            @delegate.send(@error_received_method, message)
          end
          
          def syntax_error_encountered(ignored_chunk)
            @delegate.send(@syntax_error_method, ignored_chunk)
          end
          
        end
      end
    end
  end
end